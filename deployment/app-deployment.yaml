apiVersion: apps/v1
kind: Deployment
metadata:
    name: person-service # name of Deployment
spec:
    replicas: 2 # creates 2 replicated Pods
    selector:
        matchLabels:
            app: person-service # defines how the Deployment finds which Pods to manage
    template:
        metadata:
            labels:
                app: person-service # specifies that the Pods are to be named as person-service
        spec:
            containers:
                - name: person-service-container # name of the container running inside the Pod
                  image: dev.local/bkuzmic/go-person-service:latest # image to deployed in the container
                  imagePullPolicy:  Always # pull image from the repository (dockerhub) always
                  ports:
                    - containerPort: 8000 # run on port 8000
                  livenessProbe: # To check the health of the Pod
                    httpGet:
                      path: /health
                      port: 8000
                      scheme: HTTP
                    initialDelaySeconds: 5
                    periodSeconds: 15
                    timeoutSeconds: 5
                  readinessProbe: # To check if the Pod is ready to serve traffic or not
                    httpGet:
                      path: /readiness
                      port: 8000
                      scheme: HTTP
                    initialDelaySeconds: 5
                    timeoutSeconds: 1   
                  env:
                    - name: KEY_IDLE_TIME_MINUTES
                      valueFrom:
                        configMapKeyRef:
                            name: app-configmap
                            key: keyIdleTimeMinutes
                            
                    - name: REDIS_URL
                      valueFrom:
                        configMapKeyRef:
                            name: app-configmap
                            key: redis-service

                    - name: REDIS_PASSWORD
                      valueFrom:
                        secretKeyRef:
                            name: app-secret
                            key: redis-password
---
kind: Service
apiVersion: v1
metadata:
  name: person-service # name of service
spec:
  type: NodePort # service type to be NodePort
  ports:
  - name: http
    port: 8080 # serve on port 80
    targetPort: 8000 # reach to port 8080 of all the Pods in the selector block
    nodePort: 30000 # use port 30000 as nodePort
    
  selector:
      app: person-service # The set of Pods with name 'person-service' is targeted by this Service
  
